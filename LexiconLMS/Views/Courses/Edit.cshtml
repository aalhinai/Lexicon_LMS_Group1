@model LexiconLMS.Models.Course

@{
    ViewBag.Title = "Edit";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm("Edit", "Courses", new { redirectString = ViewBag.RedirectString }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Course</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CourseId)

        <div class="form-group">
            @Html.LabelFor(model => model.CourseName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CourseName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CourseName, "", new { @class = "text-danger" })
                @if (ViewBag.Name != null)
                {
                    <span class="field-validation-error text-danger">@ViewBag.Name</span>
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseStartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CourseStartDate, new { htmlAttributes = new { @class = "form-control date-picker", onkeydown = "return false", onpaste = "return false" } })
                @Html.ValidationMessageFor(model => model.CourseStartDate, "", new { @class = "text-danger" })
                @if (ViewBag.StartDate != null)
                {
                    <span class="field-validation-error text-danger">@ViewBag.StartDate</span>
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseEndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CourseEndDate, new { htmlAttributes = new { @class = "form-control date-picker", onkeydown = "return false", onpaste = "return false" } })
                @Html.ValidationMessageFor(model => model.CourseEndDate, "", new { @class = "text-danger" })
                @if (ViewBag.EndDate != null)
                {
                    <span class="field-validation-error text-danger">@ViewBag.EndDate</span>
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CourseDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CourseDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-primary hidden-print" title="Save the changes for @Model.CourseName"><span class="glyphicon glyphicon-save"></span></button>
            </div>
        </div>
    </div>
}

<div>
    @if(ViewBag.RedirectString != "Empty")
    {

        @Html.ActionLink(" ", "", "", null, new { @class = "glyphicon glyphicon-arrow-left", style = "font-size:22px", href = ViewBag.RedirectString, title = "Back to list" })
    }
    else
    {
        @Html.ActionLink(" ", "Index", null, new { @class = "glyphicon glyphicon-arrow-left", title = "Back to course list", style = "font-size:22px" })
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")
    @Scripts.Render("~/bundles/jqueryuiTime")
    @Styles.Render("~/Content/cssjqryUiTime")
   <script type="text/javascript" src="~/Scripts/DateTimePicker.js"></script>
}
