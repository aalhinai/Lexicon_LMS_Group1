@model LexiconLMS.Models.Module

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit","Modules", new { redirectString = ViewBag.RedirectString}))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Module</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ModuleId)
        @Html.HiddenFor(model => model.CourseId)

        <div class="form-group">
            @Html.LabelFor(model => model.ModuleName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModuleName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModuleName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModuleDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModuleDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModuleDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModuleStartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModuleStartDate, new { htmlAttributes = new { @class = "form-control date-picker", onkeydown = "return false", onpaste = "return false" } })
                @Html.ValidationMessageFor(model => model.ModuleStartDate, "", new { @class = "text-danger" })
                @if (ViewBag.StartDate != null)
                {
                    <span class="field-validation-error text-danger">@ViewBag.StartDate</span>
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModuleEndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModuleEndDate, new { htmlAttributes = new { @class = "form-control date-picker", onkeydown = "return false", onpaste = "return false" } })
                @Html.ValidationMessageFor(model => model.ModuleEndDate, "", new { @class = "text-danger" })
                @if (ViewBag.EndDate != null)
                {
                    <span class="field-validation-error text-danger">@ViewBag.EndDate</span>
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @if (ViewBag.RedirectString != "Empty")
    {
        <a href=@ViewBag.RedirectString>Back to list</a>
    }
    else
    {
        if (User.IsInRole("Student"))
        {
            @Html.ActionLink("Back", "Index")
        }
        else
        {
            @Html.ActionLink("Back", "Details", "Courses", new { id = Model.CourseId}, null)
        }
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")
    @Scripts.Render("~/bundles/jqueryuiTime")
    @Styles.Render("~/Content/cssjqryUiTime")
    <script type="text/javascript" src="~/Scripts/DateTimePicker.js">

     //$(document).ready(function () {
     //    $('.date-picker').datetimepicker({
     //        //dateFormat: "dd/MM/yy",
     //        dateFormat: 'yy-mm-dd',
     //        changeMonth: true,
     //        changeYear: true,
     //        minDate: new Date(),
     //        yearRange: "+0:+1",
     //        controlType: 'select',
     //        timeFormat: 'HH:mm'
     //    });
     //});

</script>
}
